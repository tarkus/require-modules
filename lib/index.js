// Generated by CoffeeScript 1.7.1
var env, fs, options, path, require_tree, _;

fs = require('fs');

path = require('path');

_ = require('lodash');

env = process.env.NODE_DEV || 'development';

options = {
  detect_env: true
};

require_tree = function(dir) {
  var filename, module_name, modules, _i, _len, _ref;
  modules = {};
  _ref = fs.readdirSync(dir);
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    filename = _ref[_i];
    module_name = filename.split(".")[0];
    modules[module_name.replace("-", "_")] = require("" + dir + "/" + filename);
  }
  return modules;
};

module.exports = function(dir, _options) {
  var args, dirs, modules;
  args = Array.prototype.slice.call(arguments);
  if (typeof _options === 'object') {
    _options = _.merge(options, args.pop());
  } else {
    _options = options;
  }
  modules = [];
  dirs = args.length;
  args.forEach(function(dir) {
    var content, name, required, _ref;
    required = {
      _env: env
    };
    if (dir && dir.charAt(0) !== "/") {
      dir = path.join(path.dirname(module.parent.filename), dir);
    }
    _ref = require_tree("" + dir);
    for (name in _ref) {
      content = _ref[name];
      required[name] = content;
      if (!_options.detect_env) {
        continue;
      }
      if (content['all']) {
        required[name] = content['all'];
      }
      if (content[env]) {
        required[name] = _.merge(required[name], content[env]);
      }
    }
    return modules.push(required);
  });
  if (dirs === 1) {
    return modules.pop();
  } else {
    return modules;
  }
};
